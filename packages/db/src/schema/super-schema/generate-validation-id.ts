import { nanoid } from 'nanoid';
import { ValidationLibAdapter } from './adapters/ValidationLibAdapter.js';

export function getValidationOfSpecialId(
  idValue: string,
  validationAdapter: ValidationLibAdapter
) {
  if (idValue === 'nanoid') {
    // generate validation obj with correct default and check
    return validationAdapter.generateStringType(genNanoid, isValidNanoid);
  }

  throw new Error(`No resolver exists for a special id value of ${idValue}`);
}

//----  utiliy funcs

function genNanoid() {
  const nanoId = nanoid();
  return nanoId;
}

function isValidNanoid(str: any) {
  // check generated by claude 3.5 sonnet
  // Check if string is exactly 21 characters and only contains valid nanoid chars
  return /^[A-Za-z0-9_-]{21}$/.test(String(str));
}
